# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the 3.x branch
on:
  push:
    branches: [ 3.x ]
  pull_request:
    branches: [ 3.x ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build job
  build:
    env:
      SQLWATCH_PATH: SqlWatch.Monitor/Project.SqlWatch.Database
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # fix collation issue
      # you will need to change the $New_DC value to whatever collation your SQL instance is using
      - name: fix collation
        run: |
          cd $env:SQLWATCH_PATH
          $Old_DC = '<DefaultCollation>Latin1_General_CI_AS</DefaultCollation>'
          $New_DC = '<DefaultCollation>SQL_Latin1_General_CP1_CI_AS</DefaultCollation>'          
          (Get-Content "SQLWATCH.sqlproj") -replace $Old_DC, $New_DC  | Set-Content "SQLWATCH.sqlproj"
      # create dacpac using MSBUILD
      - name: create dacpac
        run: |
          cd $env:SQLWATCH_PATH
          & 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe' SQLWATCH.sqlproj /p:Configuration=Release
      # Publish an artifact
      - uses: actions/upload-artifact@v2
        with:
          name: sqlwatch
          path: ${{ github.workspace }}/${{env.SQLWATCH_PATH}}/bin/Release/  
